language: node_js
build_image: drydock/u12nodall:tip 
node_js:
  - 0.10.25
  - 0.11
  - "0.12"
  - "iojs-v1"
  - "iojs-v2"
  - "iojs-v3"
  - "4.0"
  - "4.2.2"
services:
  - postgres
  
env:
 global:
   - XUNIT_FILE=shippable/testresults/result.xml
   - secure: iqgYSd/DQzGBFVyoCmwph5KHLxu/e7rQ+Ua9+yZ4fQ+3ocAmzJ8XVrxuoUy62wB4q24sVcyr44F2FxIIvzFORKW/JjqoMK64Aqsuibr8j5yPhIXfbGUJ22rF3KLA0Q3R2s5SfUXO8XfLJ2D/0BvH/Rr8tlyMPQPMjdD4iTQY0mxuyp0HyBmnzZ0ajJ62xtVXGaReQIgcIMNCEj5AEsT79iysczfPVzj2IPASl25UYcPzpOs9UxHilZilsRaiQPdvZp7XoUbNgMN3Qr5/AYYvcycaXgzZ/3y2cdgEprXMjTpOfrgP1pjHZIxNntTDWFwYTu5yZ9l4mthjVUKyqdtOng==
  
# Postgres binds to 127.0.0.1 by default and is started on boot. Default username is "postgres" with no password
# Create a DB as part of before script to use it
# Make folders for the reports, and create the SQL db
before_script:
  - mkdir -p shippable/testresults
  - mkdir -p shippable/codecoverage
  - psql -c 'drop database if exists app_test;' -U postgres -w
  - psql -c 'CREATE DATABASE app_test;' -U postgres
 # - echo $var_test

#cache: true 

script:
  - npm test

# Generate coverage report with istanbul
after_script:
#  - echo $BRANCH  
#  - psql -c 'create database if not exists test;' -U postgres
  - ./node_modules/.bin/istanbul cover ./node_modules/.bin/_mocha -- --ui=bdd --reporter=xunit-file
  - ./node_modules/.bin/istanbul report cobertura --dir shippable/codecoverage/

after_success:
  - echo "success"
  
after_failure:
  - echo "failed"
  
  
archive: true

notifications:
  email:
    - vidya@shippable.com


